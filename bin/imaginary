#!/usr/bin/env node

var fs = require('fs')
var path = require('path')
var program = require('commander')
var imaginary = require('../')

program
  .version(imaginary.VERSION)

program
  .command('crop [image]')
  .description('Crop any image to a given square thumbnail in pixels')
  .option('-s, --server [url]', 'imaginary customer ID. Example: scvb0', imaginary.URL)
  .option('-w, --width [pixels]', 'Image width resolution')
  .option('-h, --height [pixels]', 'Image height resolution')
  .option('-o, --output [path]', 'Output image file path')
  .action(command('crop'))

program
  .command('height [imageUrl]')
  .description('Resize the image to the given height in pixels')
  .option('-i, --id [id]', 'imaginary customer ID. Example: scvb0', imaginary.URL)
  .option('-r, --resolution [resolution]', 'New image resolution', '300')
  .option('-o, --output [path]', 'Output image file path')
  .action(command('height'))

program.on('--help', function () {
  console.log('  Examples:')
  console.log('')
  console.log('    $ imaginary crop -r 200x200 http://server.net/image.jpg')
  console.log('    $ imaginary width -r 300 http://server.net/image.jpg')
  console.log('    $ imaginary height -r 300 http://server.net/image.jpg')
  console.log('    $ imaginary crop --output test.jpg http://server.net/image.jpg')
  console.log('')
})

program.parse(process.argv)

function command(action) {
  return function (image, flags) {
    var output = flags.output || path.basename(image)
    var opts = { width: flags.width, height: flags.height }

    imaginary(image, flags.server)[action](opts)
      .on('error', exitWithError)
      .pipe(fs.createWriteStream(output))
  }
}

function exitWithError(err) {
  console.error('Cannot process image:', err.message || err)
  process.exit(1)
}
